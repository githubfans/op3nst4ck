# ADMIN =======================================
OS_PROJECT_DOMAIN_NAME='default'
OS_USER_DOMAIN_NAME='Default'
OS_PROJECT_NAME='admin'
OS_USERNAME='admin'

# AJI =======================================
OS_PROJECT_DOMAIN_NAME='default'
OS_USER_DOMAIN_NAME='Default'
OS_PROJECT_NAME='aji'
OS_USERNAME='aji'

# AJI2 =======================================
OS_PROJECT_DOMAIN_NAME='449309895ba3410cb0d565bba1342b93'
OS_USER_DOMAIN_NAME='domain.aji'
OS_PROJECT_NAME='project.aji'
OS_USERNAME='aji2'


OS_PASSWORD='M0nalisa'
OS_AUTH_URL='http://rocky-controller.jcamp.net:5000/v3/'
OS_IDENTITY_API_VERSION='3'
OS_IMAGE_API_VERSION='2'

# WORKS ------------------

from keystoneauth1 import session
from keystoneauth1.identity import v3
from keystoneclient.v3 import client as ks3client
from neutronclient.v2_0 import client as nt3client
from novaclient.v2 import client as nv2client
import glanceclient.v2.client as glclient

auth = v3.Password(auth_url=OS_AUTH_URL, 
                   username=OS_USERNAME, 
                   password=OS_PASSWORD, 
                   project_name=OS_PROJECT_NAME, 
                   user_domain_name=OS_USER_DOMAIN_NAME, 
                   project_domain_id=OS_PROJECT_DOMAIN_NAME )
sess = session.Session(auth=auth)
sess.get_token()
ks = ks3client.Client(session=sess)
nt = nt3client.Client(session=sess)
nv = nv2client.client.Client(version='2.0', session=sess)
gl =  glclient.Client(session=sess)
#--------------------------------------





import os
import subprocess
os.system('curl -i -X PATCH -H "X-Auth-Token: gAAAAABb_LATazX3_vX8zJI_OXMIYNd5oz3DX4JDoiXpKthfv1H1_2YUxOOsbqleFCWR8_K-5CBreYiClGJcA-U775wUFE2ku-LE1k04ufaAae3mAF1bha4cDIuUV3OH9WXGH8_C9nLttNrexcHDCAM4vIE63p4JbHRKWI6zPlVX9dpP61YYlnY" -H "Content-Type: application/json" http://rocky-controller.jcamp.net:8774/v2/images/')





































#--------------------------------------



auth = ks3client.Client(auth_url=OS_AUTH_URL, 
                   username=OS_USERNAME, 
                   password=OS_PASSWORD, 
                   project_name=OS_PROJECT_NAME, 
                   user_domain_name=OS_USER_DOMAIN_NAME, 
                   project_domain_id=OS_PROJECT_DOMAIN_NAME )
auth.auth_token
# tanpa sess ada token
sess = session.Session(auth=auth)
sess.get_token()
keystone = ks3client.Client(session=sess)
dir(keystone)


---------------------------------------


from keystoneclient import client
keystone = client.Client(
            auth_url=OS_AUTH_URL, 
            version=(3,),
            username=OS_USERNAME, 
            password=OS_PASSWORD,
            user_domain_name=OS_USER_DOMAIN_NAME,
            project_name=OS_PROJECT_NAME,
            project_domain_name=OS_PROJECT_DOMAIN_NAME)
dir(keystone)


-------------------------------

from keystoneauth1.identity import v3
from keystoneauth1 import session
from keystoneclient.v3 import client as ks3client, roles, users

auth = v3.Password(
    auth_url=OS_AUTH_URL,
    user_domain_name=OS_USER_DOMAIN_NAME,
    project_domain_id=OS_PROJECT_DOMAIN_NAME,
    project_name=OS_PROJECT_NAME,
    username=OS_USERNAME,
    password=OS_PASSWORD)

sess = session.Session(auth=auth)
sess.get_token()
ks = ks3client.Client(session=sess)

user_id = '1c79eb43981a42998e5d239d20b310df'
domain_id = '449309895ba3410cb0d565bba1342b93'
role_name = 'role6.aji'

#roleman = roles.RoleManager(keystone)
#role = roleman.create(name=role_name, domain=domain_id)
#roleman.grant(role=role_name, user=user_id, domain=domain_id)
keystone.roles.create(name=role_name, domain=domain_id)
keystone.roles.grant(role_name, user=user_id, domain=domain_id)

#check_role = roleman.check(role, user=user_id, domain=domain_id)
check_role = keystone.roles.check(role, user=user_id, domain=domain_id)
print(check_role)
